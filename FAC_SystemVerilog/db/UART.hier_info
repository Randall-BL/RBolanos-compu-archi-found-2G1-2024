|fpga_top
clk => clk.IN2
rst_n => rst_n.IN2
rx => rx.IN1
leds[0] << leds[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
leds[1] << leds[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
leds[2] << leds[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
leds[3] << leds[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx << uart_tx:uart_transmitter.tx


|fpga_top|uart_rx:uart_receiver
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => valid~reg0.CLK
clk => shift_reg[0].CLK
clk => shift_reg[1].CLK
clk => shift_reg[2].CLK
clk => shift_reg[3].CLK
clk => shift_reg[4].CLK
clk => shift_reg[5].CLK
clk => shift_reg[6].CLK
clk => shift_reg[7].CLK
clk => bit_count[0].CLK
clk => bit_count[1].CLK
clk => bit_count[2].CLK
clk => bit_count[3].CLK
clk => baud_count[0].CLK
clk => baud_count[1].CLK
clk => baud_count[2].CLK
clk => baud_count[3].CLK
clk => baud_count[4].CLK
clk => baud_count[5].CLK
clk => baud_count[6].CLK
clk => baud_count[7].CLK
clk => baud_count[8].CLK
clk => baud_count[9].CLK
clk => baud_count[10].CLK
clk => baud_count[11].CLK
clk => baud_count[12].CLK
clk => baud_count[13].CLK
clk => baud_count[14].CLK
clk => baud_count[15].CLK
clk => state~5.DATAIN
rst_n => data[0]~reg0.ACLR
rst_n => data[1]~reg0.ACLR
rst_n => data[2]~reg0.ACLR
rst_n => data[3]~reg0.ACLR
rst_n => data[4]~reg0.ACLR
rst_n => data[5]~reg0.ACLR
rst_n => data[6]~reg0.ACLR
rst_n => data[7]~reg0.ACLR
rst_n => valid~reg0.ACLR
rst_n => shift_reg[0].ACLR
rst_n => shift_reg[1].ACLR
rst_n => shift_reg[2].ACLR
rst_n => shift_reg[3].ACLR
rst_n => shift_reg[4].ACLR
rst_n => shift_reg[5].ACLR
rst_n => shift_reg[6].ACLR
rst_n => shift_reg[7].ACLR
rst_n => bit_count[0].ACLR
rst_n => bit_count[1].ACLR
rst_n => bit_count[2].ACLR
rst_n => bit_count[3].ACLR
rst_n => baud_count[0].ACLR
rst_n => baud_count[1].ACLR
rst_n => baud_count[2].ACLR
rst_n => baud_count[3].ACLR
rst_n => baud_count[4].ACLR
rst_n => baud_count[5].ACLR
rst_n => baud_count[6].ACLR
rst_n => baud_count[7].ACLR
rst_n => baud_count[8].ACLR
rst_n => baud_count[9].ACLR
rst_n => baud_count[10].ACLR
rst_n => baud_count[11].ACLR
rst_n => baud_count[12].ACLR
rst_n => baud_count[13].ACLR
rst_n => baud_count[14].ACLR
rst_n => baud_count[15].ACLR
rst_n => state~7.DATAIN
rx => shift_reg.DATAB
rx => data.OUTPUTSELECT
rx => data.OUTPUTSELECT
rx => data.OUTPUTSELECT
rx => data.OUTPUTSELECT
rx => data.OUTPUTSELECT
rx => data.OUTPUTSELECT
rx => data.OUTPUTSELECT
rx => data.OUTPUTSELECT
rx => valid.OUTPUTSELECT
rx => state.OUTPUTSELECT
rx => state.OUTPUTSELECT
rx => state.OUTPUTSELECT
rx => state.OUTPUTSELECT
rx => state.OUTPUTSELECT
rx => state.OUTPUTSELECT
rx => state.OUTPUTSELECT
rx => state.OUTPUTSELECT
rx => baud_count.OUTPUTSELECT
rx => baud_count.OUTPUTSELECT
rx => baud_count.OUTPUTSELECT
rx => baud_count.OUTPUTSELECT
rx => baud_count.OUTPUTSELECT
rx => baud_count.OUTPUTSELECT
rx => baud_count.OUTPUTSELECT
rx => baud_count.OUTPUTSELECT
rx => baud_count.OUTPUTSELECT
rx => baud_count.OUTPUTSELECT
rx => baud_count.OUTPUTSELECT
rx => baud_count.OUTPUTSELECT
rx => baud_count.OUTPUTSELECT
rx => baud_count.OUTPUTSELECT
rx => baud_count.OUTPUTSELECT
rx => baud_count.OUTPUTSELECT
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
valid <= valid~reg0.DB_MAX_OUTPUT_PORT_TYPE


|fpga_top|uart_tx:uart_transmitter
clk => shift_reg[0].CLK
clk => shift_reg[1].CLK
clk => shift_reg[2].CLK
clk => shift_reg[3].CLK
clk => shift_reg[4].CLK
clk => shift_reg[5].CLK
clk => shift_reg[6].CLK
clk => shift_reg[7].CLK
clk => shift_reg[8].CLK
clk => shift_reg[9].CLK
clk => transmitting.CLK
clk => busy~reg0.CLK
clk => bit_count[0].CLK
clk => bit_count[1].CLK
clk => bit_count[2].CLK
clk => bit_count[3].CLK
clk => baud_count[0].CLK
clk => baud_count[1].CLK
clk => baud_count[2].CLK
clk => baud_count[3].CLK
clk => baud_count[4].CLK
clk => baud_count[5].CLK
clk => baud_count[6].CLK
clk => baud_count[7].CLK
clk => baud_count[8].CLK
clk => baud_count[9].CLK
clk => baud_count[10].CLK
clk => baud_count[11].CLK
clk => baud_count[12].CLK
clk => baud_count[13].CLK
clk => baud_count[14].CLK
clk => baud_count[15].CLK
clk => tx~reg0.CLK
rst_n => transmitting.ACLR
rst_n => busy~reg0.ACLR
rst_n => bit_count[0].ACLR
rst_n => bit_count[1].ACLR
rst_n => bit_count[2].ACLR
rst_n => bit_count[3].ACLR
rst_n => baud_count[0].ACLR
rst_n => baud_count[1].ACLR
rst_n => baud_count[2].ACLR
rst_n => baud_count[3].ACLR
rst_n => baud_count[4].ACLR
rst_n => baud_count[5].ACLR
rst_n => baud_count[6].ACLR
rst_n => baud_count[7].ACLR
rst_n => baud_count[8].ACLR
rst_n => baud_count[9].ACLR
rst_n => baud_count[10].ACLR
rst_n => baud_count[11].ACLR
rst_n => baud_count[12].ACLR
rst_n => baud_count[13].ACLR
rst_n => baud_count[14].ACLR
rst_n => baud_count[15].ACLR
rst_n => tx~reg0.PRESET
rst_n => shift_reg[0].ENA
rst_n => shift_reg[9].ENA
rst_n => shift_reg[8].ENA
rst_n => shift_reg[7].ENA
rst_n => shift_reg[6].ENA
rst_n => shift_reg[5].ENA
rst_n => shift_reg[4].ENA
rst_n => shift_reg[3].ENA
rst_n => shift_reg[2].ENA
rst_n => shift_reg[1].ENA
data_in[0] => shift_reg.DATAB
data_in[1] => shift_reg.DATAB
data_in[2] => shift_reg.DATAB
data_in[3] => shift_reg.DATAB
data_in[4] => shift_reg.DATAB
data_in[5] => shift_reg.DATAB
data_in[6] => shift_reg.DATAB
data_in[7] => shift_reg.DATAB
send => always0.IN1
tx <= tx~reg0.DB_MAX_OUTPUT_PORT_TYPE
busy <= busy~reg0.DB_MAX_OUTPUT_PORT_TYPE


